{"version":3,"sources":["Dashboard/Dashboard.module.css","Controls/Controls.module.css","Balance/Balance.module.css","TransactionHistory/TransactionHistory.module.css","Controls/Controls.jsx","Balance/Balance.jsx","TransactionHistory/TransactionHistory.jsx","Dashboard/Dashboard.jsx","App/App.jsx","index.js","App/App.module.css"],"names":["module","exports","Controls","inputAmount","onDeposit","onWithdraw","onChangeInput","className","styles","controls","type","name","value","onChange","onClick","Balance","transactions","balance","length","reduce","acc","transaction","amount","income","expenses","TransactionHistory","items","history","map","item","key","id","date","Dashboard","state","Date","toLocaleString","handleInputText","e","setState","currentTarget","handleDeposit","prevState","Number","parseInt","shortid","generate","alert","props","messageInvalidAmount","handleWithdraw","messageNotEnoughMoney","dashboard","this","Component","defaultProps","App","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ef26e06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1EPJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2L24_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1ylxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__20Juk\"};","import React from 'react';\r\n\r\nimport styles from './Controls.module.css';\r\n\r\nconst Controls = ({inputAmount, onDeposit, onWithdraw, onChangeInput}) => {\r\n    return (\r\n        <section className={styles.controls}>\r\n            <input type=\"number\" name=\"amount\" value={inputAmount} onChange={onChangeInput}/>\r\n            <button type=\"button\" onClick={onDeposit}>Deposit</button>\r\n            <button type=\"button\" onClick={onWithdraw}>Withdraw</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Controls;","import React from 'react';\r\n\r\nimport styles from './Balance.module.css';\r\n\r\nconst income = (transactions) => {\r\n    let sum = transactions.reduce((acc, transaction) => {\r\n        if (transaction.type!==\"deposit\") {\r\n            return acc; \r\n        } \r\n        else {\r\n            acc = acc + transaction.amount;\r\n            return acc;\r\n        }\r\n    }, 0)\r\n    return sum; \r\n}\r\n\r\nconst expenses = (transactions) => {\r\n    let sum = transactions.reduce((acc, transaction) => {\r\n        if (transaction.type!==\"withdraw\") {\r\n            return acc; \r\n        } \r\n        else {\r\n            acc = acc + transaction.amount;\r\n            return acc;\r\n        }\r\n    }, 0)\r\n    return sum; \r\n}\r\n\r\nconst Balance = ({transactions, balance}) => {\r\n    return (\r\n        <section className={styles.balance}>\r\n            {\r\n                transactions.length > 0 ? \r\n                    <>\r\n                    <span>⬆️{income(transactions)}$</span>\r\n                    <span>⬇️{expenses(transactions)}$</span>\r\n                    <span>Balance: {balance}$</span> \r\n                    </>\r\n                :\r\n                    <>\r\n                    <span>⬆️0$</span>\r\n                    <span>⬇️0$</span>\r\n                    <span>Balance: 0$</span>\r\n                    </>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Balance;","import React from 'react';\r\n\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return (\r\n        <table className={styles.history}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Transaction</th>\r\n                    <th>Amount</th>\r\n                    <th>Date</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              { items.map(item =>(\r\n                <tr key={item.id}>\r\n                  <td>{item.type}</td>\r\n                  <td>{item.amount}$</td>\r\n                  <td>{item.date}</td>\r\n                </tr>\r\n              ))\r\n              }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\nexport default TransactionHistory;","import React, {Component} from 'react';\r\nimport T from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from './Dashboard.module.css';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    static defaultProps = {\r\n        id: shortid.generate(),\r\n        type: '',\r\n        amount: 0,\r\n        date: new Date().toLocaleString(),\r\n        messageNotEnoughMoney: 'На счету недостаточно средств для проведения операции!',\r\n        messageInvalidAmount: 'Введите сумму для проведения операции!'\r\n    }\r\n\r\n    static propTypes = {\r\n        id: T.string,\r\n        type: T.string,\r\n        amount: T.number,\r\n        date: T.string,\r\n        messageNotEnoughMoney: T.string,\r\n        messageInvalidAmount: T.string\r\n    }\r\n\r\n    state = {\r\n        transactions: [],\r\n        balance: 0,\r\n        inputAmount: '',\r\n        type: '',\r\n        date: new Date().toLocaleString()\r\n    }\r\n\r\n    handleInputText = (e) => {\r\n        this.setState(\r\n            {\r\n                inputAmount: e.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleDeposit = () => {\r\n        return (\r\n            this.state.inputAmount > 0 ? \r\n            this.setState((prevState) => ({\r\n                balance: (\r\n                    this.state.balance = \r\n                    prevState.balance + Number.parseInt(this.state.inputAmount)\r\n                ),\r\n                transactions: (\r\n                    this.state.transactions = [\r\n                        ...this.state.transactions,\r\n                        {\r\n                            type: \"deposit\",\r\n                            amount: Number.parseInt(this.state.inputAmount),\r\n                            date: new Date().toLocaleString(),\r\n                            id: shortid.generate()\r\n                        }\r\n                    ]\r\n                )          \r\n                })) \r\n            : \r\n                alert(this.props.messageInvalidAmount)\r\n        )         \r\n    }\r\n\r\n    handleWithdraw = () => {\r\n        return (\r\n            ((this.state.inputAmount > 0) && (this.state.inputAmount < this.state.balance)) ?\r\n            this.setState((prevState) => ({\r\n                balance: (\r\n                    this.state.balance = prevState.balance - Number.parseInt(this.state.inputAmount)\r\n                ),\r\n                transactions: (\r\n                    this.state.transactions = [\r\n                        ...this.state.transactions,\r\n                        {\r\n                            type: \"withdraw\",\r\n                            amount: Number.parseInt(this.state.inputAmount),\r\n                            date: new Date().toLocaleString(),\r\n                            id: shortid.generate()\r\n                        }\r\n                    ]\r\n                )            \r\n                }))\r\n            :\r\n                alert(this.props.messageNotEnoughMoney) \r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.dashboard}>\r\n            <Controls inputAmount={this.state.inputAmount} \r\n            onChangeInput={this.handleInputText}\r\n            onDeposit={this.handleDeposit}\r\n            onWithdraw={this.handleWithdraw}\r\n            />\r\n            <Balance \r\n            transactions={this.state.transactions}\r\n            balance={this.state.balance}\r\n            />\r\n            <TransactionHistory items={this.state.transactions}/>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nimport styles from './App.module.css';\r\n\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.app}>\r\n      <Dashboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__YVB-_\"};"],"sourceRoot":""}